<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <springProperty scope="context" name="LOG_PATH" source="logging.file.path"
                    defaultValue="/home/yscredit/tomcat/logs/demo-yml"/>
    <springProperty scope="context" name="LOG_PATTERN_CONSOLE" source="logging.pattern.console"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}[%L] - %msg%n"/>

    <!--<appender>是负责写日志的组件，有三种策略-->
    <!--ConsoleAppender把日志添加到控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN_CONSOLE}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--FileAppender 把日志添加到文件-->
    <!--RollingFileAppender 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/logback-demo.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/logback-demo_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <MaxHistory>120</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}[%L] - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 日志记录器，日期滚动记录 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/logback-demo-error.log</file>

        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <!-- 归档的日志文件的路径，%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/logback-demo-error_%d{yyyy-MM-dd}.%i.log</fileNamePattern>

            <!--保留的最大文件数量-->
            <MaxHistory>120</MaxHistory>

            <!-- 除按日志记录之外，还配置了日志文件不能超过500MB，若超过500MB，日志文件会以索引0开始，
            命名日志文件，例如logback-demo-error_2022-3-8.0.log -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 追加方式记录日志 -->
        <append>true</append>

        <!-- 日志文件的格式，一是把日志信息转换成字节数组，二是把字节数组写入到输出流。-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}[%L] - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <!-- 过滤，此日志文件只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <logger name="org.apache.ibatis" level="DEBUG">
        <appender-ref ref="STDOUT"/>
    </logger>

    <!--用来设置某一个包或者具体的某一个类的日志打印级别-->
    <logger name="java.sql" level="debug">
        <appender-ref ref="STDOUT"/>
    </logger>

    <!--汇总记录到文件时，记录两类一类是error日志，一个是所有日志-->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_INFO"/>
        <appender-ref ref="FILE_ERROR"/>
    </root>

</configuration>